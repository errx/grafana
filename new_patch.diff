diff --git a/pkg/services/alerting/conditions/reducer.go b/pkg/services/alerting/conditions/reducer.go
index 0a61c13fa..601ef6418 100644
--- a/pkg/services/alerting/conditions/reducer.go
+++ b/pkg/services/alerting/conditions/reducer.go
@@ -2,8 +2,8 @@ package conditions
 
 import (
 	"math"
-
 	"sort"
+	"strings"
 
 	"github.com/grafana/grafana/pkg/components/null"
 	"github.com/grafana/grafana/pkg/tsdb"
@@ -151,6 +151,21 @@ func (s *SimpleReducer) Reduce(series *tsdb.TimeSeries) null.Float {
 		if value > 0 {
 			allNull = false
 		}
+
+	case "anomalies":
+		if strings.HasPrefix(series.Name, "[anomaly] ") {
+			for _, v := range series.Points {
+				if v[0].Valid {
+					value++
+				}
+			}
+			if value > 0 {
+				allNull = false
+			}
+		} else {
+			value = 0
+			allNull = true
+		}
 	}
 
 	if allNull {
diff --git a/public/app/core/time_series2.ts b/public/app/core/time_series2.ts
index 59729ebc3..fd7d029e7 100644
--- a/public/app/core/time_series2.ts
+++ b/public/app/core/time_series2.ts
@@ -78,6 +78,7 @@ export default class TimeSeries {
   legend: boolean;
   allIsNull: boolean;
   allIsZero: boolean;
+  overridden: boolean;
   decimals: number;
   scaledDecimals: number;
   hasMsResolution: boolean;
@@ -107,10 +108,21 @@ export default class TimeSeries {
     this.valueFormater = kbn.valueFormats.none;
     this.stats = {};
     this.legend = true;
+    this.overridden = false;
     this.unit = opts.unit;
     this.hasMsResolution = this.isMsResolutionNeeded();
   }
 
+  prepareAnomalies() {
+    if (!this.overridden && this.alias.indexOf('[anomaly] ') === 0) {
+      this.yaxis = 2;
+      this.points = {};
+      this.points.show = true;
+      this.points.radius = 4;
+      this.nullPointMode = null;
+    }
+  }
+
   applySeriesOverrides(overrides) {
     this.lines = {};
     this.dashes = {
@@ -185,6 +197,7 @@ export default class TimeSeries {
       if (override.yaxis !== void 0) {
         this.yaxis = override.yaxis;
       }
+      this.overridden = true;
     }
   }
 
diff --git a/public/app/features/alerting/alert_def.ts b/public/app/features/alerting/alert_def.ts
index 797a67abf..7de5472c1 100644
--- a/public/app/features/alerting/alert_def.ts
+++ b/public/app/features/alerting/alert_def.ts
@@ -46,6 +46,7 @@ var reducerTypes = [
   { text: 'diff()', value: 'diff' },
   { text: 'percent_diff()', value: 'percent_diff' },
   { text: 'count_non_null()', value: 'count_non_null' },
+  { text: 'anomalies()', value: 'anomalies' },
 ];
 
 var noDataModes = [
diff --git a/public/app/plugins/panel/graph/module.ts b/public/app/plugins/panel/graph/module.ts
index ef82fb395..13789fb6c 100644
--- a/public/app/plugins/panel/graph/module.ts
+++ b/public/app/plugins/panel/graph/module.ts
@@ -227,6 +227,7 @@ class GraphCtrl extends MetricsPanelCtrl {
 
     for (let series of this.seriesList) {
       series.applySeriesOverrides(this.panel.seriesOverrides);
+      series.prepareAnomalies();
 
       if (series.unit) {
         this.panel.yaxes[series.yaxis - 1].format = series.unit;
diff --git a/scripts/build/Dockerfile b/scripts/build/Dockerfile
index 808e7f141..f5c486191 100644
--- a/scripts/build/Dockerfile
+++ b/scripts/build/Dockerfile
@@ -5,7 +5,8 @@ RUN yum install -y yum-plugin-ovl initscripts curl tar gcc libc6-dev git gcc-c++
     yum install -y wget yum-utils bzip2 bzip2-devel && \
     yum install -y fontconfig freetype freetype-devel fontconfig-devel libstdc++ && \
     yum install -y rpm-build patch readline readline-devel libtool bison lzma && \
-    yum install -y which tar
+    yum install -y which tar && \
+    yum install -y libyaml libyaml-devel
 
 # Install RUBY 1.9.3
 # install necessary utilities
@@ -40,4 +41,5 @@ ADD ./build.sh /tmp/
 
 WORKDIR /tmp/
 
-CMD ["./build.sh"]
+RUN /bin/bash -l -c "rvm use 2.1.9 --default"
+ENTRYPOINT ["/bin/bash", "-l", "-c", "./build.sh"]
diff --git a/scripts/build/build.sh b/scripts/build/build.sh
index cee80822c..1de09694e 100755
--- a/scripts/build/build.sh
+++ b/scripts/build/build.sh
@@ -4,7 +4,8 @@
 #   This script is executed from within the container.
 #
 
-CCX64=/tmp/x86_64-centos6-linux-gnu/bin/x86_64-centos6-linux-gnu-gcc
+#CCX64=/tmp/x86_64-centos6-linux-gnu/bin/x86_64-centos6-linux-gnu-gcc
+CCX64=gcc
 
 GOPATH=/go
 REPO_PATH=$GOPATH/src/github.com/grafana/grafana
@@ -20,7 +21,8 @@ else
   CC=${CCX64} go run build.go -buildNumber=${CIRCLE_BUILD_NUM} build
 fi
 
-yarn install --pure-lockfile --no-progress
+gem install fpm -v 1.4
+yarn install --pure-lockfile --no-progress --network-timeout 100000
 
 echo "current dir: $(pwd)"
 
